<html lang="en">
<head>
<title>Maxima Tutorial</title>

<META content="text/html; charset=windows-1252" http-equiv=Content-Type>
<LINK href="defstyle.css" rel="stylesheet" type="text/css">
</head>

<body bgcolor="#ffffbb">
<TABLE bgColor=#ffffff border=0 cellPadding=2>
  <TBODY>
  <TR bgColor=#ccffcc>
    <TD><CENTER><a href="../../Contents.htm">Contents</a></Center></TD>
  </TR>
  </TBODY>
</TABLE>

<p><h2>Lisp - Basic Facts</h2></p>
<hr class="endOfHeader">


<p>While the occasional user of Maxima does not need to know Lisp, a good
understanding of that language is a necessity for those who want to analyse
the code of Maxima and to add own code.</p>

<p>This document describes the fundamental properties of Lisp, it does not
pay attention to the peculiarities of the currently available implementations.</p>

<h3>(LENGTH &lt;arg&gt;)</h3>
<p>This function answers the length of its argument, a list.</p>
<p><b>Definition</b></p>
<pre class="lispDef">
(LAMBDA (arg)
  (COND ((NULL arg) 0)
        (T (ADD1 (LENGTH (CDR arg))))
) )</pre>

<p><b>Rules</b></p>
<pre class="lispRule">(INTEGERP (LENGTH &lt;arg&gt;))
       TRUE</pre>
<pre class="lispRule">(LENGTH (LIST))
       0</pre>
<pre class="lispRule">(LENGTH (APPEND &lt;a&gt;  &lt;b&gt;))  
       (PLUS (LENGTH &lt;a&gt;) (LENGTH &lt;b&gt;))</pre>

<h3>(APPEND &lt;a&gt;  &lt;b&gt;)</h3>
<p>This function answers a new list that contains the top-level
elements of  &lt;a&gt; and &lt;b&gt;.</p>
<p><b>Definition:</b></p>

<pre class="lispDef">
(DEFFUN APPEND
   (LAMBDA (A B)
      (COND ((NULL A) B)
            (T (CONS (CAR A)
                     (APPEND (CDR A) B)
)  )  )     )  )</pre>
<p><b>Rules:</b></p>

<pre class="lispRule">(APPEND (APPEND &lt;a&gt;  &lt;b&gt;) &lt;c&gt;)
       (APPEND &lt;a&gt; (APPEND &lt;b&gt;  &lt;b&gt;))</pre>


<h3>(REVERSE &lt;arg&gt;)</h3>
<p>This function answers a list that contains the top-level elements of
the argument in reversed order.</p>
<p><b>Definition</b></p>

<pre class="lispDef">
(DEFFUN REVERSE
   (LAMBDA (A)
      (COND ((NULL A) NIL)
            (T (APPEND (REVERSE (CDR A))
                       (LIST (CAR A))
)  )  )     )  )
</pre>

<p>A tail-recursive definition uses an auxiliary function that
takes two parameters: a restlist and the reversed list that is
constructed so far:</p>

<pre class="lispDef">
(DEFFUN REVERSE
   (LAMBDA (A)
      ((LABEL RV
          (LAMBDA (rest result)
             (COND ((NULL rest) result)
                   (T (RV (CDR rest)
                          (CONS (CAR rest)
                                result
       )  )  )     )  )   )
       A
       NIL
)  )  )</pre> 

<p><b>Rules</b></p>
<pre class="lispRule">(REVERSE (REVERSE &lt;arg&gt;))
       &lt;arg&gt;</pre>
<pre class="lispRule">(LENGTH (REVERSE &lt;arg&gt;))
       (LENGTH &lt;arg&gt;)</pre>
<pre class="lispRule">(REVERSE (APPEND &lt;a&gt;  &lt;b&gt;))  
       (APPEND (REVERSE &lt;b&gt;) (REVERSE &lt;a&gt;))</pre>


<h3>(MEMBER &lt;arg&gt; &lt;list&gt;)</h3>
<p>This function checks whether &lt;arg&gt; is an top-level element of the
list &lt;list&gt;. </p>
<p><b>Definition</b></p>

<pre class="lispDef">
(DEFFUN MEMBER
   (LAMBDA (A L)
      (COND ((NULL L) NIL)
            ((EQUAL A (CAR L)) B)
            (T (MEMBER A (CDR A)))
)  )  )</pre>


<h3>(PAIR &lt;a&gt; &lt;a&gt;)</h3>
<p>This function checks whether &lt;arg&gt; is an top-level element of the
list &lt;list&gt;. </p>
<p><b>Definition</b></p>

<pre class="lispDef">
(DEFFUN MEMBER
   (LAMBDA (A B)
      (COND ((OR (NULL A) (NULL B)) NIL)
            (T (CONS (CONS (CAR A) (CAR B))
                     (PAIR (CDR A) (CDR B))
            )  )
)  )  )</pre>

<p><b>A tail-recursive Definiiton</b></p>

<pre class="lispDef">
(DEFFUN MEMBER
   (LAMBDA (A B)
      (COND ((OR (NULL A) (NULL B)) NIL)
            (T (CONS (CONS (CAR A) (CAR B))
                     (PAIR (CDR A) (CDR B))
            )  )
)  )  )</pre>

<br>
<hr class="startOfFooter">

<TABLE bgColor=#ffffff border=0 cellPadding=2>
  <TBODY>
  <TR bgColor=#ccffcc>
    <TD><CENTER><a href="../../Contents.htm">Contents</a></Center></TD>
  </TR>
  </TBODY>
</TABLE>

</body>
</html>
